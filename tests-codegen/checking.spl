// Test substitution and user type checking

test(x,y) :: b (a,b) -> [b] {
  return x:y.fst:[];
}

test1(x,y) :: a b -> [a] {
  return x:y:[];
}

first(t) :: ([fstTy],[sndTy]) -> [fstTy] {
  return t.snd;
}

listfun(x) {
  [a] tail = x.tl;
  return tail;
}

foo(x,y) {
  if (x) {
    return y;
  } else {
    y = y + 1;
    return y;
  }
}

bar(x) {
  x = x + 1;
  x = -x;
  return x;
}

main() {
  print(foo(False,41));
  return;
}
